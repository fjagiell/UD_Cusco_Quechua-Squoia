rule mergens {
  pattern {
    V [xpos=Root];
    NS [upos=NS];
    V -[ns]-> NS;
  }

  commands {
    V.form = V.form + NS.form;
    V.VerbForm = NS.VerbForm;

    shift NS ==> V;
    del_node NS;
  }
}

rule cas { 
  pattern {
    R [xpos=Root];
    C [upos=Cas];
    C -[s.arg]-> R;
  }
  commands{
    R.form = R.form + C.form;
    R.Case = C.Case;
    
    shift C ==> R;
    del_node C
  }
}

strat main { Seq (Onf(mergens), Onf(cas)) }
